XUM Bootloader version 1.01 Readme
----------------------------------

Contents:
---------

 README             - This file

 programmer/        - A C# Windows application for interfacing with a XUM device
   win32_installer/ - A binary installer
   win32_source/    - Visual Studio 2010 source project
 

Programmer Description:
-----------------------
 
 Implements programming software to interface with a XUM device over the
 XUM boot protocol. This specific implementation is based on C# for a
 Windows 32-bit environment. Sorry.
 
 The Verilog hardware files are not included here because this version
 is released with the full XUM hardware files.


XUM Boot Protocol Description:
------------------------------

 1. Programmer sends 'XUM' ASCII bytes.
 2. Programmer sends a number indicating how many 32-bit data words it
    has to send, minus 1. (For example, if it has one 32-bit data word,
    this number will be 0.) The size of this number is 18 bits.
    This means the minimum transmission size is 1 word (32 bits), and
    the maximum transmission size is 262144 words (exactly 1MB).
    This 18-bit number is sent in three bytes from high-order bits to
    low-order bits, and the six most significant bits of the first
    byte must be 0.
 3. The FPGA sends back the third size byte from the programmer, allowing
    the programmer to determine if the FPGA is listening and conforming
    to the XUM boot protocol.
 4. The programmer sends another 18-bit number indicating the starting
    offset in memory where the data should be placed. Normally this will
    be 0. This number is also sent in three bytes, and the six most
    significant bits of the first byte are ignored.
 5. The programmer sends the data. A copy of each byte that it sends will
    be sent back to the programmer from the FPGA, allowing the programmer
    to determine if all the data was transmitted successfully.


